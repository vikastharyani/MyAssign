#Write a Dockerfile (CentOS 6) to install the following in a Docker continer:
#
#Python 2.7
#
#MongoDB - any version
#
#Apache tomcat 7 - running on port 8080
#
#Please include comments at every command explaining what it does.
#
#Write the command to run the Dockerfile such that once the container boots, 
#apache tomcat's home page is accessible from the host on port 7080.
#
#Solution :


FROM centos:centos6
MAINTAINER "Vikas" <vikastharyani@gmail.com>

# Install yum dependencies
RUN yum -y update && \
yum groupinstall -y development && \
yum install iptables -y \
yum install -y \ 
bzip2-devel \ 
git \ 
hostname \ 
openssl \ 
openssl-devel \ 
sqlite-devel \ 
sudo \ 
tar \ 
wget \ 
zlib-dev 

# Install python2.7 RUN 
cd /tmp && \ 
wget https://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgz && \ 
tar xvfz Python-2.7.8.tgz && \ 
cd Python-2.7.8 && \ 
./configure --prefix=/usr/local && \ 
make && \ 
make altinstall


# Install MongoDB-Server
RUN yum -y install mongodb-server; yum clean all
RUN mkdir -p /data/db
#set the port to be publicly exposed 
EXPOSE 27017
ENTRYPOINT ["/usr/bin/mongod"]

# Prepare environment 
ENV JAVA_HOME /opt/java 
ENV CATALINA_HOME /opt/tomcat 
ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/bin:$CATALINA_HOME/scripts

# Install Oracle Java8 
ENV JAVA_VERSION 8u144 
ENV JAVA_BUILD 8u144-b01 
ENV JAVA_DL_HASH 090f390dda5b47b9b721c7dfaa008135 
RUN wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" \ http://download.oracle.com/otn-pub/java/jdk/${JAVA_BUILD}/${JAVA_DL_HASH}/jdk-${JAVA_VERSION}-linux-x64.tar.gz && \ tar -xvf jdk-${JAVA_VERSION}-linux-x64.tar.gz && \ 
rm jdk*.tar.gz && \ 
mv jdk* ${JAVA_HOME} 

# Install Tomcat ENV TOMCAT_MAJOR 7 
ENV TOMCAT_VERSION 7.0.82 
RUN wget http://ftp.riken.jp/net/apache/tomcat/tomcat-${TOMCAT_MAJOR}/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz && \ 

tar -xvf apache-tomcat-${TOMCAT_VERSION}.tar.gz && \ 
rm apache-tomcat*.tar.gz && \ 
mv apache-tomcat* ${CATALINA_HOME} 

RUN chmod +x ${CATALINA_HOME}/bin/*sh 

# Create Tomcat admin user 
ADD create_admin_user.sh $CATALINA_HOME/scripts/create_admin_user.sh 
ADD tomcat.sh $CATALINA_HOME/scripts/tomcat.sh 
RUN chmod +x $CATALINA_HOME/scripts/*.sh 

# Create tomcat user 
RUN groupadd -r tomcat && \ 
useradd -g tomcat -d ${CATALINA_HOME} -s /sbin/nologin -c "Tomcat user" tomcat && \ 
chown -R tomcat:tomcat ${CATALINA_HOME} 
WORKDIR /opt/tomcat 
EXPOSE 8080 
 
USER tomcat 
CMD ["tomcat.sh"]

Command to run the Dockerfile such that once the container boots, apache tomcat's home page is accessible from the host on port 7080: 
docker run --name test -p 7080:8080


